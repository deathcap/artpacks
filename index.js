// Generated by CoffeeScript 1.6.3
(function() {
  var AdmZip, match, nameToPath_RP, readResourcePack, results, zip;

  AdmZip = require('adm-zip');

  match = require('minimatch');

  readResourcePack = function(zip, names) {
    var data, found, name, pathRP, results, zipEntries, zipEntry, _i, _j, _len, _len1;
    results = {};
    zipEntries = zip.getEntries();
    for (_i = 0, _len = names.length; _i < _len; _i++) {
      name = names[_i];
      pathRP = nameToPath_RP(name);
      found = false;
      for (_j = 0, _len1 = zipEntries.length; _j < _len1; _j++) {
        zipEntry = zipEntries[_j];
        if (match(zipEntry.entryName, pathRP)) {
          console.log('FOUND', pathRP, 'AT', zipEntry.entryName);
          data = zipEntry.getData();
          console.log("decompressed " + zipEntry.entryName + " to " + data.length);
          results[name] = data;
          found = true;
        }
      }
      if (!found) {
        console.log("ERROR: couldn't find " + pathRP + " in zip!");
        results[name] = null;
      }
    }
    return results;
  };

  nameToPath_RP = function(name) {
    var a, category, ext, namespace, path, _ref;
    a = name.split('/');
    if (a.length > 1) {
      category = a[0], name = a[1];
    }
    category = (_ref = {
      undefined: 'blocks',
      'i': 'items'
    }[category]) != null ? _ref : category;
    a = name.split(':');
    if (a.length > 1) {
      namespace = a[0], name = a[1];
    }
    if (namespace == null) {
      namespace = '*';
    }
    ext = '.png';
    path = "assets/" + namespace + "/textures/" + category + "/" + name + ".png";
    return path;
  };

  console.log(nameToPath_RP('dirt'));

  console.log(nameToPath_RP('i/stick'));

  console.log(nameToPath_RP('misc/shadow'));

  console.log(nameToPath_RP('minecraft:dirt'));

  console.log(nameToPath_RP('somethingelse:dirt'));

  zip = new AdmZip('test.zip');

  results = readResourcePack(zip, ['dirt', 'i/stick', 'misc/shadow', 'minecraft:dirt', 'somethingelse:dirt']);

  console.log('results=', results);

}).call(this);
